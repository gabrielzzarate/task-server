{
  "/Users/gabrielzzarate/local/personal/task-server": {
    "versionSfCore": null,
    "versionFramework": "4.1.19",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "aws": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "gabrielzzarate",
            "app": "task-server",
            "service": "task-server",
            "plugins": [
              "serverless-offline"
            ],
            "package": {
              "patterns": [
                "!src/**",
                "src/handlers/**"
              ],
              "artifactsS3KeyDirname": "serverless/task-server/dev/code-artifacts",
              "artifact": "/Users/gabrielzzarate/local/personal/task-server/.serverless/build/task-server.zip",
              "artifactDirectoryName": "serverless/task-server/dev/1722987146686-2024-08-06T23:32:26.686Z"
            },
            "build": {
              "esbuild": {
                "bundle": true,
                "minify": false,
                "external": [
                  "@aws-sdk/client-s3"
                ],
                "exclude": [
                  "@aws-sdk/*",
                  "!@aws-sdk/client-bedrock-runtime"
                ],
                "packages": "external",
                "buildConcurrency": 3,
                "sourcemap": {
                  "type": "linked",
                  "setNodeOptions": true
                }
              }
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "stage": "dev",
              "region": "us-east-1",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "HttpProxyLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/task-server-dev-httpProxy"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "task-server",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-server-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-server-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "task-server",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpProxyLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/task-server/dev/1722987146686-2024-08-06T23:32:26.686Z/task-server.zip"
                      },
                      "Handler": "src/handlers/http.run",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "task-server-dev-httpProxy",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "HttpProxyLogGroup"
                    ]
                  },
                  "HttpProxyLambdaVersiongqnlZD33ZudcZj9p2qGSEnLryCSLHFKDBEkvm7aHs": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "HttpProxyLambdaFunction"
                      },
                      "CodeSha256": "iEklYl0j3+BscZyiRM7PX4ib7XJMqONkft+eZ3JRx0k="
                    }
                  },
                  "HttpProxyLambdaFunctionUrl": {
                    "Type": "AWS::Lambda::Url",
                    "Properties": {
                      "AuthType": "NONE",
                      "TargetFunctionArn": {
                        "Fn::GetAtt": [
                          "HttpProxyLambdaFunction",
                          "Arn"
                        ]
                      }
                    }
                  },
                  "HttpProxyLambdaPermissionFnUrl": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "HttpProxyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunctionUrl",
                      "Principal": "*",
                      "FunctionUrlAuthType": "NONE"
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "dev-task-server",
                      "ProtocolType": "HTTP"
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "HttpProxyLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "HttpProxyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationHttpProxy": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "HttpProxyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteDefault": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "$default",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationHttpProxy"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationHttpProxy"
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-task-server-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "HttpProxyLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "HttpProxyLambdaVersiongqnlZD33ZudcZj9p2qGSEnLryCSLHFKDBEkvm7aHs"
                    },
                    "Export": {
                      "Name": "sls-task-server-dev-HttpProxyLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpProxyLambdaFunctionUrl": {
                    "Description": "Lambda Function URL",
                    "Value": {
                      "Fn::GetAtt": [
                        "HttpProxyLambdaFunctionUrl",
                        "FunctionUrl"
                      ]
                    },
                    "Export": {
                      "Name": "sls-task-server-dev-HttpProxyLambdaFunctionUrl"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-task-server-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-task-server-dev-HttpApiUrl"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "httpProxy": {
                "handler": "src/handlers/http.run",
                "url": true,
                "events": [
                  {
                    "httpApi": "*",
                    "resolvedMethod": "ANY"
                  }
                ],
                "name": "task-server-dev-httpProxy",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "HttpProxyLambdaVersiongqnlZD33ZudcZj9p2qGSEnLryCSLHFKDBEkvm7aHs"
              }
            }
          },
          "configFileDirPath": "/Users/gabrielzzarate/local/personal/task-server",
          "config": {
            "type": "aws"
          },
          "options": {},
          "stage": "dev",
          "dashboard": {
            "aws": {
              "accessKeyId": "<REDACTED>",
              "secretAccessKey": "<REDACTED>",
              "sessionToken": "<REDACTED>"
            },
            "params": null,
            "accessKey": "<REDACTED>"
          },
          "isDefaultConfig": true
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "/Users/gabrielzzarate/local/personal/task-server",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "gabrielzzarate",
      "app": "task-server",
      "service": "task-server",
      "plugins": [
        "serverless-offline"
      ],
      "package": {
        "patterns": [
          "!src/**",
          "src/handlers/**"
        ],
        "artifactsS3KeyDirname": "serverless/task-server/dev/code-artifacts",
        "artifact": "/Users/gabrielzzarate/local/personal/task-server/.serverless/build/task-server.zip",
        "artifactDirectoryName": "serverless/task-server/dev/1722987146686-2024-08-06T23:32:26.686Z"
      },
      "build": {
        "esbuild": {
          "bundle": true,
          "minify": false,
          "external": [
            "@aws-sdk/client-s3"
          ],
          "exclude": [
            "@aws-sdk/*",
            "!@aws-sdk/client-bedrock-runtime"
          ],
          "packages": "external",
          "buildConcurrency": 3,
          "sourcemap": {
            "type": "linked",
            "setNodeOptions": true
          }
        }
      },
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "HttpProxyLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/task-server-dev-httpProxy"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "task-server",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-server-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-server-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "task-server",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "HttpProxyLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/task-server/dev/1722987146686-2024-08-06T23:32:26.686Z/task-server.zip"
                },
                "Handler": "src/handlers/http.run",
                "Runtime": "nodejs20.x",
                "FunctionName": "task-server-dev-httpProxy",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "HttpProxyLogGroup"
              ]
            },
            "HttpProxyLambdaVersiongqnlZD33ZudcZj9p2qGSEnLryCSLHFKDBEkvm7aHs": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "HttpProxyLambdaFunction"
                },
                "CodeSha256": "iEklYl0j3+BscZyiRM7PX4ib7XJMqONkft+eZ3JRx0k="
              }
            },
            "HttpProxyLambdaFunctionUrl": {
              "Type": "AWS::Lambda::Url",
              "Properties": {
                "AuthType": "NONE",
                "TargetFunctionArn": {
                  "Fn::GetAtt": [
                    "HttpProxyLambdaFunction",
                    "Arn"
                  ]
                }
              }
            },
            "HttpProxyLambdaPermissionFnUrl": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "HttpProxyLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunctionUrl",
                "Principal": "*",
                "FunctionUrlAuthType": "NONE"
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-task-server",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "HttpProxyLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "HttpProxyLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationHttpProxy": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "HttpProxyLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteDefault": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "$default",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationHttpProxy"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationHttpProxy"
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-task-server-dev-ServerlessDeploymentBucketName"
              }
            },
            "HttpProxyLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "HttpProxyLambdaVersiongqnlZD33ZudcZj9p2qGSEnLryCSLHFKDBEkvm7aHs"
              },
              "Export": {
                "Name": "sls-task-server-dev-HttpProxyLambdaFunctionQualifiedArn"
              }
            },
            "HttpProxyLambdaFunctionUrl": {
              "Description": "Lambda Function URL",
              "Value": {
                "Fn::GetAtt": [
                  "HttpProxyLambdaFunctionUrl",
                  "FunctionUrl"
                ]
              },
              "Export": {
                "Name": "sls-task-server-dev-HttpProxyLambdaFunctionUrl"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-task-server-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-task-server-dev-HttpApiUrl"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "httpProxy": {
          "handler": "src/handlers/http.run",
          "url": true,
          "events": [
            {
              "httpApi": "*",
              "resolvedMethod": "ANY"
            }
          ],
          "name": "task-server-dev-httpProxy",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "HttpProxyLambdaVersiongqnlZD33ZudcZj9p2qGSEnLryCSLHFKDBEkvm7aHs"
        }
      }
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: gabrielzzarate\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: task-server\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\nservice: task-server\nplugins:\n  - serverless-offline\n\npackage:\n  patterns:\n    - \"!src/**\"\n    - src/handlers/**\nbuild:\n  esbuild:\n    # Enable or Disable bundling the function code and dependencies. (Default: true)\n    bundle: true\n    # Enable minifying function code. (Default: false)\n    minify: false\n    # NPM packages to not be bundled. Glob patterns are supported here.\n    external:\n      - \"@aws-sdk/client-s3\"\n    # NPM packages to not be bundled, as well as not included in node_modules\n    # in the zip file uploaded to Lambda. By default this will be set to aws-sdk\n    # if the runtime is set to nodejs16.x or lower or set to @aws-sdk/* if set to nodejs18.x or higher.\n    # Glob patterns are supported here.\n    exclude:\n      - \"@aws-sdk/*\"\n      - \"!@aws-sdk/client-bedrock-runtime\"\n    # The packages config, this can be set to override the behavior of external\n    # If this is set then all dependencies will be treated as external and not bundled.\n    packages: external\n    # By default Framework will attempt to build and package all functions concurrently.\n    # This property can bet set to a different number if you wish to limit the\n    # concurrency of those operations.\n    buildConcurrency: 3\n    # Enable or configure sourcemaps, can be set to true or to an object with further configuration.\n    sourcemap:\n      # The sourcemap type to use, options are (inline, linked, or external)\n      type: linked\n      # Whether to set the NODE_OPTIONS on functions to enable sourcemaps on Lambda\n      setNodeOptions: true\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n\nfunctions:\n  httpProxy:\n    handler: src/handlers/http.run\n    url: true\n    events:\n      - httpApi: \"*\"\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "d9b8063abad9b5cd340423cb3cd06b1b",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "abbf144b-8797-4b21-9a89-2e6cde32e5dd",
    "orgName": "gabrielzzarate",
    "userId": "rt4MsCCs50PdzyGBmW",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": true,
        "monitoring": true
      },
      "orgObservabilityIntegrations": [
        {
          "integrationId": "897P88NEq3UxrY2cvWgU8u",
          "awsAccountId": "086826468775",
          "status": "alive"
        }
      ],
      "serviceAppId": "Xnn9cGwKGl9cLKf1Rn",
      "serviceProvider": {
        "accessKeyId": "<REDACTED>",
        "secretAccessKey": "<REDACTED>",
        "sessionToken": "<REDACTED>"
      },
      "instanceParameters": null
    },
    "userName": "gabrielzzarate",
    "subscription": null,
    "userEmail": "gabrielzzarate@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "086826468775",
    "versionSf": "4.1.19",
    "serviceProviderAwsCfStackName": "task-server-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:086826468775:stack/task-server-dev/bf1f4b70-542f-11ef-884a-0e8391f62e67",
    "serviceProviderAwsCfStackCreated": "2024-08-06T20:09:11.944Z",
    "serviceProviderAwsCfStackUpdated": "2024-08-06T23:32:34.451Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "HttpProxyLambdaFunctionUrl",
        "OutputValue": "https://seayadyx556wzev2q34r6angme0qgjie.lambda-url.us-east-1.on.aws/",
        "Description": "Lambda Function URL",
        "ExportName": "sls-task-server-dev-HttpProxyLambdaFunctionUrl"
      },
      {
        "OutputKey": "HttpProxyLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:086826468775:function:task-server-dev-httpProxy:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-task-server-dev-HttpProxyLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "f7w170glqk",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-task-server-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "task-server-dev-serverlessdeploymentbucket-gfjetbqnnder",
        "ExportName": "sls-task-server-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://f7w170glqk.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-task-server-dev-HttpApiUrl"
      }
    ]
  }
}